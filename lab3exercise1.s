.data					
	array:	.space 12			; 12 empty spaces
	B: 		.word 1, 2, 3		; words of data (64-bits)
	C: 		.word32 2			; create a 32-bit word with value 2 (decimal)
	D: 		.word32 3			; create a 32-bit word with value 3 (decimal)
	E: 		.word32 4			; create a 32-bit word with value 4 (decimal)
	F: 		.word32 5			; create a 32-bit word with value 5 (decimal)
	G: 		.word32 6			; create a 32-bit word with value 6 (decimal)
	H: 		.word32 7			; create a 32-bit word with value 7 (decimal)
	I: 		.word32 8			; create a 32-bit word with value 8 (decimal)
	J: 		.word32 9			; create a 32-bit word with value 9 (decimal)
	K: 		.word32 10			; create a 32-bit word with value 10 (decimal)
	L: 		.word32 11			; create a 32-bit word with value 11 (decimal)
	M:		.word 2
	CTRL:	.word 0x10000
	DATA:	.word 0x10008

.text				; start of code segment
main:				; label indicating the start of the program, lable represetns the instruction address (0x0000)

	ld r1, CTRL(r0)
	ld r2, DATA(r0)
	ld r3, M(r0)
	ld r4, array(r0)
	ld r5, B(r0)
	ld r6, C(r0)
	ld r7, D(r0)
	ld r8, E(r0)
	ld r9, F(r0)
	ld r10, G(r0)
	ld r11, H(r0)
	ld r12, I(r0)
	ld r13, J(r0)
	ld r14, K(r0)
	ld r15, L(r0)
	sd r4, 0(r2)
	sd r3, 0(r1)
	sd r5, 0(r2)
	sd r3, 0(r1)
	sd r6, 0(r2)
	sd r3, 0(r1)
	sd r7, 0(r2)
	sd r3, 0(r1)
	sd r8, 0(r2)
	sd r3, 0(r1)
	sd r9, 0(r2)
	sd r3, 0(r1)
	sd r10, 0(r2)
	sd r3, 0(r1)
	sd r11, 0(r2)
	sd r3, 0(r1)
	sd r12, 0(r2)
	sd r3, 0(r1)
	sd r13, 0(r2)
	sd r3, 0(r1)
	sd r14, 0(r2)
	sd r3, 0(r1)
	sd r15, 0(r2)
	sd r3, 0(r1)
	halt